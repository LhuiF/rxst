<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unionx.web.proxy.dao.ProxyInfoMapper">
  <resultMap id="BaseResultMap" type="com.unionx.web.proxy.vo.ProxyInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="proxy_name" jdbcType="VARCHAR" property="proxyName" />
    <result column="open_bank" jdbcType="VARCHAR" property="openBank" />
    <result column="open_bank_account" jdbcType="VARCHAR" property="openBankAccount" />
    <result column="open_bank_username" jdbcType="VARCHAR" property="openBankUsername" />
    <result column="appointment_payment_date" jdbcType="DATE" property="appointmentPaymentDate" />
    <result column="client_name" jdbcType="VARCHAR" property="clientName" />
    <result column="registered_address" jdbcType="VARCHAR" property="registeredAddress" />
    <result column="office_address" jdbcType="VARCHAR" property="officeAddress" />
    <result column="Change_the_cost" jdbcType="TINYINT" property="changeTheCost" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="update_date" jdbcType="DATE" property="updateDate" />
    <result column="isdel" jdbcType="CHAR" property="isdel" />
    <result column="remarks"  property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, proxy_name, open_bank, open_bank_account, open_bank_username, appointment_payment_date, 
    client_name, registered_address, office_address, Change_the_cost, create_name, create_date, 
    update_name, update_date, isdel,remarks
  </sql>
  <select id="selectByExample" parameterType="com.unionx.web.proxy.po.ProxyInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from proxy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from proxy_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from proxy_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.unionx.web.proxy.po.ProxyInfoCriteria">
    delete from proxy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.unionx.web.proxy.vo.ProxyInfo">
    insert into proxy_info (id, proxy_name, open_bank, 
      open_bank_account, open_bank_username, appointment_payment_date, 
      client_name, registered_address, office_address, 
      Change_the_cost, create_name, create_date, 
      update_name, update_date, isdel,remarks
      )
    values (#{id,jdbcType=VARCHAR}, #{proxyName,jdbcType=VARCHAR}, #{openBank,jdbcType=VARCHAR}, 
      #{openBankAccount,jdbcType=VARCHAR}, #{openBankUsername,jdbcType=VARCHAR}, #{appointmentPaymentDate,jdbcType=DATE}, 
      #{clientName,jdbcType=VARCHAR}, #{registeredAddress,jdbcType=VARCHAR}, #{officeAddress,jdbcType=VARCHAR}, 
      #{changeTheCost,jdbcType=TINYINT}, #{createName,jdbcType=DATE}, #{createDate,jdbcType=DATE}, 
      #{updateName,jdbcType=VARCHAR}, #{updateDate,jdbcType=DATE}, #{isdel,jdbcType=CHAR},#{remarks}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.unionx.web.proxy.vo.ProxyInfo"  >
    insert into proxy_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id!= null">
      id,
      </if>
      <if test="proxyName != null">
        proxy_name,
      </if>
      <if test="openBank != null">
        open_bank,
      </if>
      <if test="openBankAccount != null">
        open_bank_account,
      </if>
      <if test="openBankUsername != null">
        open_bank_username,
      </if>
      <if test="appointmentPaymentDate != null">
        appointment_payment_date,
      </if>
      <if test="clientName != null">
        client_name,
      </if>
      <if test="registeredAddress != null">
        registered_address,
      </if>
      <if test="officeAddress != null">
        office_address,
      </if>
      <if test="changeTheCost != null">
        Change_the_cost,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
       <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="proxyName != null">
        #{proxyName,jdbcType=VARCHAR},
      </if>
      <if test="openBank != null">
        #{openBank,jdbcType=VARCHAR},
      </if>
      <if test="openBankAccount != null">
        #{openBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="openBankUsername != null">
        #{openBankUsername,jdbcType=VARCHAR},
      </if>
      <if test="appointmentPaymentDate != null">
        #{appointmentPaymentDate,jdbcType=DATE},
      </if>
      <if test="clientName != null">
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="registeredAddress != null">
        #{registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeAddress != null">
        #{officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="changeTheCost != null">
        #{changeTheCost,jdbcType=TINYINT},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=DATE},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=DATE},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
       #{remarks},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.unionx.web.proxy.po.ProxyInfoCriteria" resultType="java.lang.Long">
    select count(*) from proxy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update proxy_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.proxyName != null">
        proxy_name = #{record.proxyName,jdbcType=VARCHAR},
      </if>
      <if test="record.openBank != null">
        open_bank = #{record.openBank,jdbcType=VARCHAR},
      </if>
      <if test="record.openBankAccount != null">
        open_bank_account = #{record.openBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.openBankUsername != null">
        open_bank_username = #{record.openBankUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.appointmentPaymentDate != null">
        appointment_payment_date = #{record.appointmentPaymentDate,jdbcType=DATE},
      </if>
      <if test="record.clientName != null">
        client_name = #{record.clientName,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredAddress != null">
        registered_address = #{record.registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.officeAddress != null">
        office_address = #{record.officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.changeTheCost != null">
        Change_the_cost = #{record.changeTheCost,jdbcType=TINYINT},
      </if>
      <if test="record.createName != null">
        create_name = #{record.createName,jdbcType=DATE},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.updateName != null">
        update_name = #{record.updateName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=DATE},
      </if>
      <if test="record.isdel != null">
        isdel = #{record.isdel,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update proxy_info
    set id = #{record.id,jdbcType=VARCHAR},
      proxy_name = #{record.proxyName,jdbcType=VARCHAR},
      open_bank = #{record.openBank,jdbcType=VARCHAR},
      open_bank_account = #{record.openBankAccount,jdbcType=VARCHAR},
      open_bank_username = #{record.openBankUsername,jdbcType=VARCHAR},
      appointment_payment_date = #{record.appointmentPaymentDate,jdbcType=DATE},
      client_name = #{record.clientName,jdbcType=VARCHAR},
      registered_address = #{record.registeredAddress,jdbcType=VARCHAR},
      office_address = #{record.officeAddress,jdbcType=VARCHAR},
      Change_the_cost = #{record.changeTheCost,jdbcType=TINYINT},
      create_name = #{record.createName,jdbcType=DATE},
      create_date = #{record.createDate,jdbcType=DATE},
      update_name = #{record.updateName,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=DATE},
      isdel = #{record.isdel,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.unionx.web.proxy.vo.ProxyInfo">
    update proxy_info
    <set>
      <if test="proxyName != null">
        proxy_name = #{proxyName,jdbcType=VARCHAR},
      </if>
      <if test="openBank != null">
        open_bank = #{openBank,jdbcType=VARCHAR},
      </if>
      <if test="openBankAccount != null">
        open_bank_account = #{openBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="openBankUsername != null">
        open_bank_username = #{openBankUsername,jdbcType=VARCHAR},
      </if>
      <if test="appointmentPaymentDate != null">
        appointment_payment_date = #{appointmentPaymentDate,jdbcType=DATE},
      </if>
      <if test="clientName != null">
        client_name = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="registeredAddress != null">
        registered_address = #{registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeAddress != null">
        office_address = #{officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="changeTheCost != null">
        Change_the_cost = #{changeTheCost,jdbcType=TINYINT},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=DATE},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=DATE},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks},
      </if>
      
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unionx.web.proxy.vo.ProxyInfo">
    update proxy_info
    set proxy_name = #{proxyName,jdbcType=VARCHAR},
      open_bank = #{openBank,jdbcType=VARCHAR},
      open_bank_account = #{openBankAccount,jdbcType=VARCHAR},
      open_bank_username = #{openBankUsername,jdbcType=VARCHAR},
      appointment_payment_date = #{appointmentPaymentDate,jdbcType=DATE},
      client_name = #{clientName,jdbcType=VARCHAR},
      registered_address = #{registeredAddress,jdbcType=VARCHAR},
      office_address = #{officeAddress,jdbcType=VARCHAR},
      Change_the_cost = #{changeTheCost,jdbcType=TINYINT},
      create_name = #{createName,jdbcType=DATE},
      create_date = #{createDate,jdbcType=DATE},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=DATE},
      isdel = #{isdel,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="deleByid" parameterType="string">
    update proxy_info
     set isdel = '1'
    where id = #{id}
  </update>
</mapper>